# This playbook pulls the latest Docker images and restarts containers on multiple servers.
# Each server uses a unique Docker Compose directory specified in the inventory (see below).
# The universal .env file in the compose files provides the container tag and other variables.
---
- name: Update containers on all servers
  become: yes
  hosts: servers
  tasks:
    - name: Copy the universal .env file to the Docker Compose directory
      # Copies the shared .env file from the specified source path to the Docker Compose directory on each server
      copy:
        src: "{{ env_file_path }}"  # The path to the universal .env file (defined per server in the inventory)
        dest: "{{ compose_dir }}/.env"  # The Docker Compose directory for each server
        remote_src: yes  # Ensures the .env file is sourced from the remote server
        mode: '0644'  # Sets file permissions

    - name: Pull new Docker images using docker-compose
      # Runs the 'docker-compose pull' command to pull the latest versions of images, using the specified Docker path
      shell: "{{ docker_command }}-compose pull"  # Uses the 'docker_command' to specify the correct Docker location
      args:
        chdir: "{{ compose_dir }}"  # Runs the command in the directory where docker-compose.yml is located

    - name: Recreate and start containers using docker-compose
      # Runs the 'docker-compose up -d' command to recreate and start containers with the updated images
      shell: "{{ docker_command }}-compose up -d"  # Uses the 'docker_command' to specify the correct Docker location
      args:
        chdir: "{{ compose_dir }}"  # Runs the command in the directory where docker-compose.yml is located

# Ex inventory file
# [servers]
# 192.168.1.7 ansible_user=mac compose_dir=/home/mac/docker_volumes/beszel env_file_path=/mnt/Apex/env_files/beszel/.env docker_command="/bin/docker"
# 192.168.1.10 ansible_user=mac compose_dir=/volume1/Apex/docker_volumes/beszel env_file_path=/volume1/Apex/env_files/beszel/.env docker_command="/usr/local/bin/docker"
