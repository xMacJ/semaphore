# This playbook pulls the latest Docker images and restarts containers on multiple servers.
# Each server uses a unique Docker Compose directory specified in the inventory (see below).
# The universal .env file in the compose files provides the container tag and other variables.
---
- name: Update containers on all servers
  become: yes
  hosts: servers
  tasks:
    - name: Copy the universal .env file to the Docker Compose directory
      # Copies the shared .env file from the specified location to the Docker Compose directory on each server
      copy:
        src: "{{ env_file_path }}"
        dest: "{{ compose_dir }}/.env"
        remote_src: yes  # Ensures the .env file is read from the remote server, not the Ansible controller
        mode: '0644'

    - name: Pull new Docker images using the specified docker command
      # Runs 'docker compose pull' using the docker command specified in the inventory file for each server
      shell: "{{ docker_command }} docker-compose pull"
      args:
        chdir: "{{ compose_dir }}"  # Runs the command in the directory where docker-compose.yml is located

    - name: Recreate and start containers using the specified docker command
      # Runs 'docker compose up -d' to recreate and start containers with the updated images
      shell: "{{ docker_command }} docker-compose up -d"
      args:
        chdir: "{{ compose_dir }}"  # Runs the command in the directory where docker-compose.yml is located


# Ex inventory file
# [servers]
# 192.168.23.7 ansible_user=mac compose_dir=/home/mac/docker_volumes/dozzle
# 192.168.23.8 ansible_user=mac compose_dir=/home/mac/docker_volumes/dozzle

